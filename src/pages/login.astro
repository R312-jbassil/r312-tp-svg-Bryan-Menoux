---
import Layout from "../layouts/Layout.astro";

if (Astro.locals.user) {
  return Astro.redirect("/");
}
---

<Layout>
  <div
    class="min-h-screen flex items-center justify-center bg-base-200 px-6 py-12"
  >
    <div class="w-full max-w-sm">
      <div
        class="w-full rounded-2xl border border-base-300 bg-base-100 shadow-xl p-8"
      >
        <div class="text-center space-y-2 mb-8">
          <h1 class="text-3xl font-bold text-base-content">Connexion</h1>
          <p class="text-sm text-base-content/70">
            Accedez a votre espace SVG Lab
          </p>
        </div>

        <form id="login-form" class="flex flex-col gap-5 text-base-content/80">
          <label
            class="form-control gap-2 rounded-xl border border-base-300 bg-base-200/60 px-4 py-3 focus-within:border-primary"
          >
            <span class="label-text text-sm text-base-content">Email</span>
            <input
              type="email"
              name="email"
              placeholder="nom@exemple.com"
              required
              class="input input-bordered rounded-lg border-none bg-transparent px-0 text-base-content placeholder:text-base-content/60 focus:outline-none focus:ring-0"
            />
          </label>

          <label
            class="form-control gap-2 rounded-xl border border-base-300 bg-base-200/60 px-4 py-3 focus-within:border-primary"
          >
            <span class="label-text text-sm text-base-content"
              >Mot de passe</span
            >
            <input
              type="password"
              name="password"
              placeholder="********"
              required
              class="input input-bordered rounded-lg border-none bg-transparent px-0 text-base-content placeholder:text-base-content/60 focus:outline-none focus:ring-0"
            />
          </label>

          <button
            type="submit"
            class="btn btn-primary btn-block rounded-lg mt-2"
          >
            Se connecter
          </button>

          <p class="text-xs text-center text-base-content/70">
            Pas de compte ?
            <a class="link link-primary" href="/signup/">Creez-en un</a>.
          </p>
        </form>

        <div class="divider text-xs uppercase text-base-content/50">ou</div>

        <button
          id="google-login"
          type="button"
          class="btn btn-outline btn-block gap-2 rounded-lg"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 256 262"
            class="h-5 w-5"
            aria-hidden="true"
          >
            <path
              fill="#EA4335"
              d="M255.68 133.45c0-10.57-.86-18.27-2.72-26.24H130.55v47.6h71.95c-1.45 11.85-9.28 29.73-26.7 41.75l-.24 1.6 38.79 30.05 2.69 0.27c24.7-22.8 38.44-56.3 38.44-95.03"
            ></path>
            <path
              fill="#34A853"
              d="M130.55 261.1c34.99 0 64.37-11.64 85.83-31.72l-40.89-31.64c-10.95 7.6-25.64 12.9-44.94 12.9-34.32 0-63.45-22.8-73.85-54.4l-1.52 0.13-39.99 31.06-0.52 1.47C35.48 231.54 79.92 261.1 130.55 261.1"
            ></path>
            <path
              fill="#4A90E2"
              d="M56.7 156.24c-2.75-8.12-4.35-16.8-4.35-25.74s1.6-17.62 4.23-25.74l-0.07-1.73-40.5-31.59-1.32 0.62C5.24 92.26 0 110.14 0 130.5s5.24 38.24 14.68 54.44l42.02-28.7"
            ></path>
            <path
              fill="#FBBC05"
              d="M130.55 50.5c24.34 0 40.75 10.52 50.1 19.32l36.54-35.77C194.8 12.3 165.54 0 130.55 0 79.92 0 35.48 29.56 14.68 76.06l41.96 28.7c10.47-34.3 39.59-54.26 73.91-54.26"
            ></path>
          </svg>
          Continuer avec Google
        </button>

        <p
          id="status"
          class="mt-4 text-center text-sm min-h-[1.5rem] rounded-lg py-2 transition-all"
        >
        </p>
      </div>
    </div>
  </div>

  <script>
    //@ts-nocheck
    localStorage.removeItem("user");
    const form = document.getElementById("login-form");
    const status = document.getElementById("status");
    const googleButton = document.getElementById("google-login");

    function setStatus(message, type) {
      status.className =
        "mt-4 text-center text-sm min-h-[1.5rem] rounded-lg py-2 transition-all";

      if (message && message.trim().length > 0) {
        status.classList.add("bg-base-200/80");
      }

      if (type === "error") {
        status.classList.add("text-error");
      } else if (type === "success") {
        status.classList.add("text-success");
      } else {
        status.classList.add("text-base-content/70");
      }
      status.textContent = message;
    }

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(form);
      setStatus("Connexion en cours...", "");

      try {
        const res = await fetch("/apis/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            email: formData.get("email"),
            password: formData.get("password"),
          }),
          credentials: "include",
        });

        if (res.ok) {
          const resData = await res.json();
          localStorage.setItem("user", JSON.stringify(resData.user));
          setStatus("Connexion reussie !", "success");
          setTimeout(() => (window.location.href = "/"), 800);
        } else {
          setStatus("Email ou mot de passe invalide.", "error");
        }
      } catch {
        setStatus("Erreur de connexion. Verifiez votre reseau.", "error");
      }
    });

    async function finalizeSession(payload) {
      const res = await fetch("/apis/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
        credentials: "include",
      });
      if (!res.ok) throw new Error("session");
      const data = await res.json();
      localStorage.setItem("user", JSON.stringify(data.user));
    }

    googleButton?.addEventListener("click", async () => {
      setStatus("Connexion avec Google...", "");
      try {
        // importe ton module pocketbase client-side
        const { default: pb } = await import("../lib/pocketbase.js");

        // définit explicitement le redirectUrl local (doit correspondre exactement à l'URI autorisée dans Google Console)
        const localRedirect =
          window.location.hostname === "localhost" ||
          window.location.hostname === "127.0.0.1"
            ? "http://127.0.0.1:8090/api/oauth2-redirect"
            : window.location.origin.replace(/\/+$/, "") +
              "/api/oauth2-redirect";

        await pb.collection("users").authWithOAuth2({
          provider: "google",
          redirectUrl: localRedirect,
        });

        const token = pb.authStore.token;
        const record = JSON.parse(JSON.stringify(pb.authStore.model || {}));
        if (!token || !record?.id) {
          throw new Error("OAuth missing token or record");
        }
        await finalizeSession({ token, record });
        pb.authStore.clear();
        setStatus("Connexion réussie !", "success");
        setTimeout(() => (window.location.href = "/"), 800);
      } catch (err) {
        console.error("Google OAuth error:", err);
        setStatus("Échec de connexion Google", "error");
      }
    });
  </script>
</Layout>
