---
import Layout from "../layouts/Layout.astro";

if (Astro.locals.user) {
  return Astro.redirect("/");
}
---

<Layout>
  <div
    class="min-h-screen flex items-center justify-center bg-base-200 px-6 py-12"
  >
    <div class="w-full max-w-sm">
      <div
        class="w-full rounded-2xl border border-base-300 bg-base-100 shadow-xl p-8"
      >
        <div class="text-center space-y-2 mb-8">
          <h1 class="text-3xl font-bold text-base-content">Inscription</h1>
          <p class="text-sm text-base-content/70">
            Créez votre compte pour rejoindre SVG Lab.
          </p>
        </div>

        <form id="signup-form" class="flex flex-col gap-5 text-base-content/80">
          <label
            class="form-control gap-2 rounded-xl border border-base-300 bg-base-200/60 px-4 py-3 focus-within:border-primary"
          >
            <span class="label-text text-sm text-base-content"
              >Nom d'utilisateur</span
            >
            <input
              type="text"
              name="username"
              placeholder="Votre pseudo"
              class="input input-bordered rounded-lg border-none bg-transparent px-0 text-base-content placeholder:text-base-content/60 focus:outline-none focus:ring-0"
            />
          </label>

          <label
            class="form-control gap-2 rounded-xl border border-base-300 bg-base-200/60 px-4 py-3 focus-within:border-primary"
          >
            <span class="label-text text-sm text-base-content">Email</span>
            <input
              type="email"
              name="email"
              placeholder="nom@exemple.com"
              required
              class="input input-bordered rounded-lg border-none bg-transparent px-0 text-base-content placeholder:text-base-content/60 focus:outline-none focus:ring-0"
            />
          </label>

          <label
            class="form-control gap-2 rounded-xl border border-base-300 bg-base-200/60 px-4 py-3 focus-within:border-primary"
          >
            <span class="label-text text-sm text-base-content"
              >Mot de passe</span
            >
            <input
              type="password"
              name="password"
              placeholder="********"
              required
              minlength="8"
              class="input input-bordered rounded-lg border-none bg-transparent px-0 text-base-content placeholder:text-base-content/60 focus:outline-none focus:ring-0"
            />
          </label>

          <label
            class="form-control gap-2 rounded-xl border border-base-300 bg-base-200/60 px-4 py-3 focus-within:border-primary"
          >
            <span class="label-text text-sm text-base-content">
              Confirmer le mot de passe
            </span>
            <input
              type="password"
              name="passwordConfirm"
              placeholder="********"
              required
              minlength="8"
              class="input input-bordered rounded-lg border-none bg-transparent px-0 text-base-content placeholder:text-base-content/60 focus:outline-none focus:ring-0"
            />
          </label>

          <button
            type="submit"
            class="btn btn-primary btn-block rounded-lg mt-2"
          >
            Créer un compte
          </button>

          <p class="text-xs text-center text-base-content/70">
            Déjà inscrit ?
            <a class="link link-primary" href="/login">Se connecter</a>
          </p>
        </form>

        <p
          id="status"
          class="mt-4 text-center text-sm min-h-[1.5rem] rounded-lg py-2 transition-all"
        >
        </p>
      </div>
    </div>
  </div>

  <script>
    //@ts-nocheck
    localStorage.removeItem("user");
    const form = document.getElementById("signup-form");
    const status = document.getElementById("status");

    function setStatus(message, type) {
      status.className =
        "mt-4 text-center text-sm min-h-[1.5rem] rounded-lg py-2 transition-all";

      if (message && message.trim().length > 0) {
        status.classList.add("bg-base-200/80");
      }

      if (type === "error") {
        status.classList.add("text-error");
      } else if (type === "success") {
        status.classList.add("text-success");
      } else {
        status.classList.add("text-base-content/70");
      }
      status.textContent = message;
    }

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const formData = new FormData(form);
      const password = formData.get("password");
      const passwordConfirm = formData.get("passwordConfirm");

      if (password !== passwordConfirm) {
        setStatus("Les mots de passe ne correspondent pas.", "error");
        return;
      }

      setStatus("Création du compte en cours...", "");

      try {
        const res = await fetch("/api/signup", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            email: formData.get("email"),
            password,
            passwordConfirm,
            username: formData.get("username"),
          }),
          credentials: "include",
        });

        const resData = await res.json();

        if (res.ok) {
          localStorage.setItem("user", JSON.stringify(resData.user));
          setStatus("Compte créé avec succès !", "success");
          setTimeout(() => (window.location.href = "/"), 800);
        } else {
          setStatus(resData.error || "Impossible de créer le compte.", "error");
        }
      } catch (err) {
        console.error("Signup error:", err);
        setStatus("Erreur de connexion. Vérifiez votre réseau.", "error");
      }
    });
  </script>
</Layout>
