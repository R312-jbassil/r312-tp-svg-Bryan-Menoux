---
import "../styles/global.css";
import { ui } from "../i18n/ui.js";
import pb from "../lib/pocketbase.js";

type SessionUser = {
  id: string;
  email?: string;
  username?: string;
  name?: string;
  avatar?: string;
  collectionId?: string;
};

const locale = (Astro.locals.lang as "en" | "fr") ?? "fr";
const user = (Astro.locals.user as SessionUser | null) ?? null;

let avatarUrl: string | null = null;
if (user && user.avatar) {
  try {
    const isLocal =
      typeof window !== "undefined"
        ? window.location.hostname === "localhost" ||
          window.location.hostname === "127.0.0.1"
        : import.meta.env.MODE === "development";

    const baseUrl = isLocal
      ? "http://127.0.0.1:8090"
      : "http://tp-svg.bryan-menoux.fr:8087";

    const collectionId = "_pb_users_auth_";
    avatarUrl = `${baseUrl}/api/files/${collectionId}/${user.id}/${user.avatar}?thumb=100x100`;
  } catch (error) {
    console.error(
      "Erreur lors de la construction de l'URL de l'avatar:",
      error
    );
    avatarUrl = null;
  }
}

const displayName =
  user?.name ?? user?.username ?? user?.email ?? ui[locale].nav.profile;
const userInitial = displayName.trim().charAt(0).toUpperCase() || "U";
const defaultTheme = "dracula";
const themeCookie = Astro.cookies.get("theme")?.value;
const activeTheme = themeCookie ?? defaultTheme;
const navLinks = [
  { href: "/generator", label: ui[locale].nav.generator },
  { href: "/gallery", label: ui[locale].nav.gallery },
  { href: "/public-gallery", label: ui[locale].nav.publicGallery },
];
const themeOptions = [
  { value: "dracula", label: "Dracula" },
  { value: "retro", label: "Retro" },
  { value: "cyberpunk", label: "Cyberpunk" },
  { value: "valentine", label: "Valentine" },
  { value: "aqua", label: "Aqua" },
];
---

<!doctype html>
<html
  lang={locale}
  data-theme={activeTheme}
  data-locale={locale}
  class="h-full"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{ui[locale].nav.appName}</title>
  </head>
  <body class="h-full">
    <div class="flex h-full flex-col min-h-0">
      <header class="border-b border-base-200 bg-base-300">
        <div class="mx-auto flex w-full items-center gap-6 px-4 py-3">
          <div class="flex flex-1 items-center gap-4">
            <form
              method="POST"
              action={Astro.url.pathname}
              class="flex items-center gap-2"
            >
              <label for="language-select" class="sr-only">
                {ui[locale].nav.language}
              </label>
              <select
                id="language-select"
                name="language"
                class="select select-sm bg-base-200"
                onchange="this.form.submit()"
              >
                <option value="en" selected={locale === "en"}>English</option>
                <option value="fr" selected={locale === "fr"}>Francais</option>
              </select>
            </form>
            <a href="/" class="btn btn-ghost px-2 text-xl font-semibold">
              {ui[locale].nav.appName}
            </a>
          </div>
          <nav
            aria-label="Main navigation"
            class="hidden flex-1 items-center justify-center gap-4 text-lg font-semibold lg:flex"
          >
            {
              navLinks.map((link) => (
                <a href={link.href} class="btn btn-ghost text-lg">
                  {link.label}
                </a>
              ))
            }
          </nav>
          <div class="flex flex-1 items-center justify-end gap-4">
            <div class="dropdown dropdown-end">
              <div tabindex="0" role="button" class="btn text-base">
                {ui[locale].nav.theme}
                <svg
                  width="12"
                  height="12"
                  class="inline-block h-2 w-2 fill-current opacity-60"
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 2048 2048"
                  aria-hidden="true"
                >
                  <path
                    d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"
                  ></path>
                </svg>
              </div>
              <ul
                tabindex="-1"
                class="dropdown-content menu bg-base-300 rounded-box z-[1] w-52 gap-1 p-2 shadow-2xl"
              >
                {
                  themeOptions.map((theme) => (
                    <li>
                      <input
                        type="radio"
                        name="theme-dropdown"
                        class="theme-controller btn btn-ghost btn-block justify-start text-sm"
                        aria-label={theme.label}
                        value={theme.value}
                        checked={theme.value === activeTheme ? true : undefined}
                      />
                    </li>
                  ))
                }
              </ul>
            </div>
            {
              user ? (
                <div class="dropdown dropdown-end">
                  <div
                    tabindex="0"
                    role="button"
                    class="btn btn-ghost btn-circle avatar"
                  >
                    {avatarUrl ? (
                      <div class="w-10 rounded-full">
                        <img src={avatarUrl} alt={displayName} />
                      </div>
                    ) : (
                      <span class="flex h-10 w-10 items-center justify-center rounded-full bg-primary text-base-100">
                        {userInitial}
                      </span>
                    )}
                  </div>
                  <ul
                    tabindex="-1"
                    class="dropdown-content menu menu-sm bg-base-300 rounded-box z-[1] w-40 p-2 shadow-2xl"
                  >
                    <li>
                      <a href="/profil" class="justify-between">
                        {ui[locale].nav.profile}
                      </a>
                    </li>
                    <li>
                      <a href="/apis/logout/">{ui[locale].nav.logout}</a>
                    </li>
                  </ul>
                </div>
              ) : (
                <div class="flex items-center gap-2">
                  <a href="/login" class="btn btn-outline text-base">
                    {ui[locale].nav.login}
                  </a>
                  <a href="/signup" class="btn btn-primary text-base">
                    {ui[locale].nav.signup}
                  </a>
                </div>
              )
            }
          </div>
        </div>
        <div class="border-t border-base-200 bg-base-300 lg:hidden">
          <nav aria-label="Mobile navigation" class="flex gap-2 px-3 py-2">
            {
              navLinks.map((link) => (
                <a href={link.href} class="btn btn-ghost flex-1 text-base">
                  {link.label}
                </a>
              ))
            }
          </nav>
        </div>
      </header>

      <div class="min-h-0 flex-1">
        <slot />
      </div>
    </div>
    <script type="module">
      document.addEventListener("DOMContentLoaded", () => {
        /** @type {NodeListOf<HTMLInputElement>} */
        const themeRadios = document.querySelectorAll(
          'input[name="theme-dropdown"]'
        );
        /**
         * @param {string} theme
         */
        const applyTheme = (theme) => {
          document.documentElement.setAttribute("data-theme", theme);
          document.cookie = `theme=${theme}; path=/; max-age=31536000`;
        };
        themeRadios.forEach((radio) => {
          radio.addEventListener("change", () => {
            if (radio.checked) applyTheme(radio.value);
          });
        });
      });
    </script>
  </body>
</html>
